(set-info :origin "SLAyer refinement benchmarks created by Jael Kriener")
(set-logic HORN)
(declare-fun transition-2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool Bool (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun transition-1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32)) Bool)
(declare-fun transition-0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool) Bool)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) )(=> (|transition-0| (_ bv2 32) ?C ?B ?A false) (|transition-0| (_ bv1 32) ?C ?B ?A false)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) )(=> (|transition-1| (_ bv2 32) ?E ?D ?C ?B false ?A) (|transition-1| (_ bv1 32) ?E ?D ?C ?B false ?A)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) (?F Bool) (?G (_ BitVec 32)) (?H (_ BitVec 32)) )(=> (|transition-2| (_ bv2 32) ?H ?G ?E ?D ?C false ?F ?B ?A) (|transition-2| (_ bv1 32) ?H ?G ?E ?D ?C false ?F ?B ?A)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) )(|transition-0| (_ bv2 32) ?B (_ bv1 32) ?A false))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) )(=> (= ?A (bvneg (_ bv1 32))) (|transition-1| (_ bv2 32) ?D (_ bv1 32) ?C ?B false ?A)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) (?F (_ BitVec 32)) )(let (($x5321 (|transition-2| (_ bv2 32) ?F (_ bv1 32) ?E ?D ?C false false ?B ?A)))
(=> (and (= ?A (bvneg (_ bv1 32))) (= ?B (bvneg (_ bv1 32)))) $x5321)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) )(=> (|transition-0| (_ bv1 32) ?D ?B ?A false) (|transition-0| (_ bv0 32) ?C ?B ?A false)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) (?F (_ BitVec 32)) )(=> (|transition-1| (_ bv1 32) ?F ?D ?C ?B false ?A) (|transition-1| (_ bv0 32) ?E ?D ?C ?B false ?A)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) (?F Bool) (?G (_ BitVec 32)) (?H (_ BitVec 32)) (?I (_ BitVec 32)) )(let (($x21330 (and (|transition-2| (_ bv1 32) ?I ?G ?E ?D ?C false ?F ?B ?A) (or (not (= ?E (_ bv1 32))) (not ?F)))))
(=> $x21330 (|transition-2| (_ bv0 32) ?H ?G ?E ?D ?C false ?F ?B ?A))))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) )(=> (|transition-1| (_ bv0 32) ?E ?D ?C ?B false ?A) (|transition-0| (_ bv0 32) ?E ?D ?C false)))
)
(assert (forall ((?A (_ BitVec 32)) (?B (_ BitVec 32)) (?C (_ BitVec 32)) (?D (_ BitVec 32)) (?E (_ BitVec 32)) (?F Bool) (?G (_ BitVec 32)) (?H (_ BitVec 32)) (?I (_ BitVec 32)) (?J (_ BitVec 32)) )(let (($x166 (and (|transition-2| (_ bv0 32) ?J ?I ?H ?D ?C false ?F ?B ?A) (= ?G ?D) (= ?E ?B))))
(=> $x166 (|transition-1| (_ bv0 32) ?J ?I ?H ?G false ?E))))
)
(assert (not (exists ((nondet1 (_ BitVec 32)) (front (_ BitVec 32)) (prog_var_0bvsubx (_ BitVec 32)))
       (transition-0 (_ bv0 32) nondet1 front prog_var_0bvsubx false))))
(check-sat)
