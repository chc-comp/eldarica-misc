(set-info :origin "NTS benchmark converted to SMT-LIB2 using Eldarica (http://lara.epfl.ch/w/eldarica)")
(set-logic HORN)
(declare-fun REC__f ((_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun REC_f_f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun REC_f_ ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)))(and (and (and (and (and (not (= (bvmul (bvneg (_ bv1 32)) A) (_ bv0 32))) (not (bvsge (bvadd (bvsub (_ bv2 32) A) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsle B (bvneg (_ bv1 32)))) (not (bvsge (bvadd B (bvneg (_ bv1 32))) (_ bv0 32)))) (= B A)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= (bvmul (bvneg (_ bv1 32)) (bvadd A (_ bv2 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd A (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd B (bvneg (_ bv2 32))) C)) (REC__f C A)) (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsle D (bvneg (_ bv1 32)))) (not (bvsge (bvadd D (bvneg (_ bv1 32))) (_ bv0 32)))) (= D B)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)))(and (and (and (and (and (not (= (bvadd A (_ bv0 32)) (_ bv0 32))) (bvsge (bvadd (bvsub (_ bv2 32) B) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (= A B)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)))(and (and (and (and (and (not (= A B)) (not (bvsge (bvadd (bvsub (_ bv2 32) B) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (= A B)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= A (bvadd B (_ bv2 32)))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd B (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd C (bvneg (_ bv2 32))) D)) (REC__f D B)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (= A C)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= (bvadd A (_ bv0 32)) (_ bv0 32))) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd B (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd C (bvneg (_ bv2 32))) D)) (REC__f D B)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (= A C)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(and (and (and (and (and (and (and (and (not (= (bvadd (bvadd A (_ bv1 32)) (_ bv0 32)) (_ bv0 32))) (not (bvsle (bvadd A (_ bv1 32)) (bvneg (_ bv1 32))))) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd B (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd C (bvneg (_ bv1 32))) D)) (= (bvadd E (bvneg (_ bv2 32))) F)) (REC_f_f D A F B)) (bvsge (bvadd (bvadd E (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd C (bvneg (_ bv1 32))) (_ bv0 32))) (= C E)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(and (and (and (and (and (and (and (and (not (= (bvadd A (_ bv1 32)) (bvadd B (_ bv2 32)))) (not (bvsle (bvadd A (_ bv1 32)) (bvneg (_ bv1 32))))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd B (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd C (bvneg (_ bv1 32))) D)) (= (bvadd E (bvneg (_ bv2 32))) F)) (REC_f_f D A F B)) (bvsge (bvadd (bvadd E (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd C (bvneg (_ bv1 32))) (_ bv0 32))) (= C E)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(and (and (and (and (and (and (and (and (not (= (bvmul (bvneg (_ bv1 32)) (bvadd A (_ bv2 32))) (_ bv0 32))) (bvsle (bvadd B (_ bv1 32)) (bvneg (_ bv1 32)))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd A (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd C (bvneg (_ bv1 32))) D)) (= (bvadd E (bvneg (_ bv2 32))) F)) (REC_f_f D B F A)) (bvsge (bvadd (bvadd E (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd C (bvneg (_ bv1 32))) (_ bv0 32))) (= C E)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= (bvadd A (_ bv1 32)) B)) (not (bvsle (bvadd A (_ bv1 32)) (bvneg (_ bv1 32))))) (= (bvadd C (bvneg (_ bv1 32))) D)) (REC_f_ D A)) (not (bvsge (bvadd (bvsub (_ bv2 32) B) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd C (bvneg (_ bv1 32))) (_ bv0 32))) (= C B)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= (bvmul (bvneg (_ bv1 32)) A) (_ bv0 32))) (bvsle (bvadd B (_ bv1 32)) (bvneg (_ bv1 32)))) (= (bvadd C (bvneg (_ bv1 32))) D)) (REC_f_ D B)) (not (bvsge (bvadd (bvsub (_ bv2 32) A) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd C (bvneg (_ bv1 32))) (_ bv0 32))) (= C A)))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(and (and (and (and (and (and (and (not (= (bvadd (bvadd A (_ bv1 32)) (_ bv0 32)) (_ bv0 32))) (not (bvsle (bvadd A (_ bv1 32)) (bvneg (_ bv1 32))))) (= (bvadd B (bvneg (_ bv1 32))) C)) (REC_f_ C A)) (bvsge (bvadd (bvsub (_ bv2 32) D) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd D (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd B (bvneg (_ bv1 32))) (_ bv0 32))) (= B D)))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(=> (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd C (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd A (bvneg (_ bv2 32))) D)) (REC__f D C)) (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (REC__f A B))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(=> (and (and (and (and (= (bvadd C (_ bv2 32)) B) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd C (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd A (bvneg (_ bv2 32))) D)) (REC__f D C)) (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (REC__f A B))))
(assert (forall ((A (_ BitVec 32)))(=> (and (not (bvsge (bvadd (bvsub (_ bv2 32) A) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (REC__f A A))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)))(=> (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (bvsge (bvadd (bvsub (_ bv2 32) A) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd A (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (REC__f A B))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(=> (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (bvsle (bvadd C (_ bv1 32)) (bvneg (_ bv1 32)))) (= (bvadd A (bvneg (_ bv1 32))) D)) (REC_f_ D C)) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_ A B))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(=> (and (and (and (and (= (bvadd C (_ bv1 32)) B) (not (bvsle (bvadd C (_ bv1 32)) (bvneg (_ bv1 32))))) (= (bvadd A (bvneg (_ bv1 32))) D)) (REC_f_ D C)) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_ A B))))
(assert (forall ((A (_ BitVec 32)))(=> (and (not (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_ A A))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)))(=> (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_ A B))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(=> (and (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (bvsle (bvadd E (_ bv1 32)) (bvneg (_ bv1 32)))) (= (bvadd A (bvneg (_ bv1 32))) F)) (REC_f_ F E)) (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(=> (and (and (and (and (and (and (and (= (bvadd E (_ bv1 32)) B) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (not (bvsle (bvadd E (_ bv1 32)) (bvneg (_ bv1 32))))) (= (bvadd A (bvneg (_ bv1 32))) F)) (REC_f_ F E)) (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (bvsle (bvadd D (_ bv1 32)) (bvneg (_ bv1 32)))) (= (bvadd A (bvneg (_ bv1 32))) E)) (REC_f_ E D)) (not (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvadd D (_ bv1 32)) B) (not (bvsle (bvadd D (_ bv1 32)) (bvneg (_ bv1 32))))) (= (bvadd A (bvneg (_ bv1 32))) E)) (REC_f_ E D)) (not (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvadd E (_ bv2 32)) D)) (bvsle (bvadd F (_ bv1 32)) (bvneg (_ bv1 32)))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd E (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd A (bvneg (_ bv1 32))) G)) (= (bvadd C (bvneg (_ bv2 32))) H)) (REC_f_f G F H E)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvadd E (_ bv1 32)) B) (= (bvadd F (_ bv2 32)) D)) (not (bvsle (bvadd E (_ bv1 32)) (bvneg (_ bv1 32))))) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd F (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd A (bvneg (_ bv1 32))) G)) (= (bvadd C (bvneg (_ bv2 32))) H)) (REC_f_f G E H F)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (bvsle (bvadd E (_ bv1 32)) (bvneg (_ bv1 32)))) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd F (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd A (bvneg (_ bv1 32))) G)) (= (bvadd C (bvneg (_ bv2 32))) H)) (REC_f_f G E H F)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvadd E (_ bv1 32)) B) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (not (bvsle (bvadd E (_ bv1 32)) (bvneg (_ bv1 32))))) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd F (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd A (bvneg (_ bv1 32))) G)) (= (bvadd C (bvneg (_ bv2 32))) H)) (REC_f_f G E H F)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) C) (_ bv0 32)) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd D (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd B (bvneg (_ bv2 32))) E)) (REC__f E D)) (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvadd D (_ bv2 32)) C) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd D (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd B (bvneg (_ bv2 32))) E)) (REC__f E D)) (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)))(=> (and (and (and (not (bvsge (bvadd (bvsub (_ bv2 32) B) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A A B B))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)))(=> (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) C) (_ bv0 32)) (bvsge (bvadd (bvsub (_ bv2 32) B) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd B (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsle A (bvneg (_ bv1 32))))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(=> (and (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (bvsge (bvadd (bvsub (_ bv2 32) (bvadd E (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (= (bvadd C (bvneg (_ bv2 32))) F)) (REC__f F E)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(=> (and (and (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvadd E (_ bv2 32)) D)) (not (bvsge (bvadd (bvsub (_ bv2 32) (bvadd E (_ bv2 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (= (bvadd C (bvneg (_ bv2 32))) F)) (REC__f F E)) (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A B C D))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)))(=> (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (not (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A B C C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)))(=> (and (and (and (and (and (= (bvmul (bvneg (_ bv1 32)) B) (_ bv0 32)) (= (bvmul (bvneg (_ bv1 32)) D) (_ bv0 32))) (bvsge (bvadd (bvsub (_ bv2 32) C) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvadd C (bvneg (_ bv1 32))) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsle A (bvneg (_ bv1 32)))) (not (bvsge (bvadd A (bvneg (_ bv1 32))) (_ bv0 32)))) (REC_f_f A B C D))))
(check-sat)
