(set-info :origin "NTS benchmark converted to SMT-LIB2 using Eldarica (http://lara.epfl.ch/w/eldarica)")
(set-logic HORN)
(declare-fun INV1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun INV3 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun INV2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun INV4 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvadd D (bvneg (_ bv1 32))) B) (= (bvadd E (_ bv1 32)) C)) (not (bvsge (bvadd (bvsub F G) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd (bvsub A E) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 F H G A D E)) (= I J)) (= K L)) (INV3 A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)))(=> (and (and (and (and (and (and (not (bvsge (bvadd (bvsub F D) (bvneg (_ bv1 32))) (_ bv0 32))) (INV3 D E F)) (not (bvsge (bvadd (bvsub A C) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd (bvsub G H) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 A B C G I H)) (= J K)) (= L M)) (INV1 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvadd D (_ bv1 32)) A) (= (bvadd E (_ bv1 32)) B)) (bvsge (bvadd (bvsub C D) (bvneg (_ bv1 32))) (_ bv0 32))) (INV3 D E C)) (not (bvsge (bvadd (bvsub F G) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd (bvsub H I) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 F J G H K I)) (= L M)) (= N O)) (INV3 A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvadd (bvadd G (bvneg (_ bv2 32))) (_ bv1 32)) B) (= (bvadd H (_ bv1 32)) C)) (= (bvadd I (bvneg (_ bv1 32))) E)) (= (bvadd J (_ bv1 32)) F)) (bvsge (bvadd (bvsub A H) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub D J) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 A G H D I J)) (= K L)) (= M N)) (INV2 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)) (P (_ BitVec 32)))(=> (and (and (and (and (and (and (and (not (bvsge (bvadd (bvsub F D) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub C A) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV2 A B C D E F)) (bvsge (bvadd (bvsub G H) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub I J) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 G K H I L J)) (= M N)) (= O P)) (INV1 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)) (P (_ BitVec 32)) (Q (_ BitVec 32)) (R (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (and (= (bvadd G (_ bv1 32)) D) (= (bvadd H (_ bv1 32)) E)) (bvsge (bvadd (bvsub F G) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub C A) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV2 A B C G H F)) (bvsge (bvadd (bvsub I J) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub K L) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 I M J K N L)) (= O P)) (= Q R)) (INV2 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)) (P (_ BitVec 32)) (Q (_ BitVec 32)) (R (_ BitVec 32)) (S (_ BitVec 32)) (T (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (and (and (and (= (bvadd (bvadd G (_ bv2 32)) (bvneg (_ bv1 32))) A) (= (bvadd H (_ bv1 32)) B)) (= (bvadd I (_ bv1 32)) D)) (= (bvadd J (_ bv1 32)) E)) (bvsge (bvadd (bvsub F I) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub C G) (bvneg (_ bv1 32))) (_ bv0 32))) (INV2 G H C I J F)) (bvsge (bvadd (bvsub K L) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub M N) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 K O L M P N)) (= Q R)) (= S T)) (INV2 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)) (P (_ BitVec 32)) (Q (_ BitVec 32)) (R (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (and (= (bvadd (bvadd G (_ bv2 32)) (bvneg (_ bv1 32))) A) (= (bvadd H (_ bv1 32)) B)) (not (bvsge (bvadd (bvsub F D) (bvneg (_ bv1 32))) (_ bv0 32)))) (bvsge (bvadd (bvsub C G) (bvneg (_ bv1 32))) (_ bv0 32))) (INV2 G H C D E F)) (bvsge (bvadd (bvsub I J) (bvneg (_ bv1 32))) (_ bv0 32))) (bvsge (bvadd (bvsub K L) (bvneg (_ bv1 32))) (_ bv0 32))) (INV1 I M J K N L)) (= O P)) (= Q R)) (INV2 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N (_ BitVec 32)) (O (_ BitVec 32)))(=> (and (and (and (and (and (and (and (and (= (bvadd (bvadd D (_ bv2 32)) (bvneg (_ bv1 32))) A) (= (bvadd E (_ bv1 32)) B)) (bvsge (bvadd (bvsub C D) (bvneg (_ bv1 32))) (_ bv0 32))) (INV4 D E C)) (bvsge (bvadd (bvsub F G) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub H I) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV1 F J G H K I)) (= L M)) (= N O)) (INV4 A B C))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)))(=> (and (and (and (and (and (and (not (bvsge (bvadd (bvsub C A) (bvneg (_ bv1 32))) (_ bv0 32))) (INV4 A B C)) (bvsge (bvadd (bvsub G H) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub D F) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV1 G I H D E F)) (= J K)) (= L M)) (INV1 A B C D E F))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)))(=> (and (and (and (and (and (and (= (bvadd (bvadd D (bvneg (_ bv2 32))) (_ bv1 32)) B) (= (bvadd E (_ bv1 32)) C)) (bvsge (bvadd (bvsub A E) (bvneg (_ bv1 32))) (_ bv0 32))) (not (bvsge (bvadd (bvsub F G) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV1 A D E F H G)) (= I J)) (= K L)) (INV4 A B C))))
(assert (not (exists ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)))(and (and (and (and (and (not (= A B)) (not (bvsge (bvadd (bvsub C D) (bvneg (_ bv1 32))) (_ bv0 32)))) (not (bvsge (bvadd (bvsub E F) (bvneg (_ bv1 32))) (_ bv0 32)))) (INV1 C A D E B F)) (= G H)) (= I J)))))
(assert (forall ((A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)))(=> (and (and (and (= (bvmul (bvneg (_ bv1 32)) C) (_ bv0 32)) (= (bvmul (bvneg (_ bv1 32)) F) (_ bv0 32))) (= A D)) (= B E)) (INV1 A B C D E F))))
(check-sat)
